name: Publish new version on PyPi

on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        description: Version bump!
        required: true

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PYPI_PUBLISH_PAT }}
          fetch-depth: 0
          ref: master

      - name: Git Config
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Set package version in version.py
        run: |
          echo "__version__ = '${{ github.events.inputs.version }}'" > honeybadger/version.py
          cat honeybadger/version.py

      - name: Update changelog
        run: |
          printf -v date '%(%Y-%m-%d)T\n' -1
          sed -i "6 a ## [${{ github.events.inputs.version }}] - $date" CHANGELOG.md
          sed -i '/## \[Unreleased\]/{G;}' CHANGELOG.md
          cat CHANGELOG.md

      - name: Install SSL lib
        run: |
          which openssl
          openssl version -a
          sudo apt-get install libssl-dev
          openssl version -a
          which openssl

      - name: Inspect Paths 1/2
        run: ls /usr/include/openssl

      - name: Inspect Paths 2/2
        run: ls /usr/lib64

      - name: Setup pyenv
        uses: "gabrielfalcao/pyenv-action@v10"
        env:
          CPPFLAGS: "-I/usr/include/openssl"
          LDFLAGS: "-L/usr/lib64"
        with:
          default: 2.7.9
          versions: 3.7.5

#      - name: Build for python 2
#        run: |
#          pyenv local 2.7.9 && python -mvenv .venv279
#          pip install --upgrade twine wheel
#          python setup.py bdist_wheel
#          python --version
#          ls dist

#      - name: Build for python 3
#        run: |
#          pyenv local 3.7.5 && python3 -mvenv .venv375
#          pip3 install --upgrade twine wheel
#          python3 setup.py bdist_wheel
#          python3 --version
#          ls dist

#      - name: Upload
#        env:
#          TWINE_USERNAME: __token__
#          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
#        run: twine upload dist/*

#      - name: Push version on git
#        run: |
#          git commit -m "Release ${{ github.events.inputs.version }}"
#          git tag v${{ github.events.inputs.version }}
#          git push origin master --tags
